@using Kentico.Xperience.AiraUnified.NavBar
@using Kentico.Xperience.AiraUnified.NavBar.Models
@using Kentico.Xperience.AiraUnified.Admin
@inject INavigationService NavigationService

<nav class="navbar">
    <div class="container">
        <div class="navbar-brand">
            <img alt="Kentico" id="aira-unified-app-logo" src="@($"{BaseUrl}{navBarModel?.LogoImgRelativePath}")">
        </div>
        <h1 class="c-app_title" id="aira-unified-title">
            <svg id="aira-unified-title-img" class="c-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5.61629 10.1095L7.48839 4.49316L9.36049 10.1095L14.9768 11.9816L9.36049 13.8537L7.48839 19.4699L5.61629 13.8537L0 11.9816L5.61629 10.1095Z" fill="currentColor"/>
                <path d="M13.8542 18.3463L14.9774 14.9766L16.1007 18.3463L19.4704 19.4696L16.1007 20.5929L14.9774 23.9626L13.8542 20.5929L10.4844 19.4696L13.8542 18.3463Z" fill="currentColor"/>
                <path d="M16.4735 4.49303L17.9712 0L19.4689 4.49303L23.9619 5.99071L19.4689 7.48839L17.9712 11.9814L16.4735 7.48839L11.9805 5.99071L16.4735 4.49303Z" fill="currentColor"/>
            </svg>
            <span id="aira-unified-title-text">@(navBarModel?.TitleText ?? "Loading...")</span>
        </h1>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup">
            <svg class="c-icon" id="burger-icon" style="color: #8107c1">
                <use href="@($"{BaseUrl}/_content/Kentico.Xperience.AiraUnified/img/icons.svg#hamburger-menu")"></use>
            </svg>
        </button>
    </div>

    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="container">
            <div class="navbar-nav">
                <div class="c-nav">
                    <div class="c-nav_content">
                        @if (navBarModel?.ChatItem != null)
                        {
                            <a class="d-flex align-items-center gap-2 btn" href="@navBarModel.ChatItem.Url">
                                <img src="@($"{BaseUrl}{navBarModel.ChatItem.MenuImage}")" class="c-icon text-primary" />
                                @navBarModel.ChatItem.Title
                            </a>
                        }
                        @if (navBarModel?.SmartUploadItem != null)
                        {
                            <a class="d-flex align-items-center gap-2 btn" href="@navBarModel.SmartUploadItem.Url">
                                <img src="@($"{BaseUrl}{navBarModel.SmartUploadItem.MenuImage}")" class="c-icon text-primary" />
                                @navBarModel.SmartUploadItem.Title
                            </a>
                        }
                    </div>
                    <hr class="c-nav_hr">
                    <div class="c-nav_footer">
                        <p class="text-center fs-1">@navBarModel?.MenuMessage</p>
                        <p>Â© 2024 Kentico. All rights reserved.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</nav>

@if (isLoading)
{
    <div style="color: red; padding: 10px;">Loading navigation...</div>
}

@if (hasError)
{
    <div style="color: red; padding: 10px;">Error loading navigation: @errorMessage</div>
}

@code {
    [Parameter] public string PageIdentifier { get; set; } = AiraUnifiedConstants.ChatRelativeUrl;
    [Parameter] public string BaseUrl { get; set; } = string.Empty;
    
    private NavBarViewModel? navBarModel;
    private bool isLoading = true;
    private bool hasError = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            navBarModel = await NavigationService.GetNavBarViewModel(PageIdentifier, BaseUrl);
            isLoading = false;
        }
        catch (Exception ex)
        {
            hasError = true;
            errorMessage = ex.Message;
            isLoading = false;
        }
        
        StateHasChanged();
    }
}